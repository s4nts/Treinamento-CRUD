// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste1.Models;

#nullable disable

namespace Teste1.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20220524212259_CriacaoBd")]
    partial class CriacaoBd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Teste1.Models.Curriculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CPF")
                        .HasColumnType("int")
                        .HasColumnName("CPF");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cidade");

                    b.Property<DateTime>("Dta_Nasc")
                        .HasColumnType("datetime2")
                        .HasColumnName("Dta_Nasc");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Funcao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Obs");

                    b.Property<float>("Salario")
                        .HasColumnType("real")
                        .HasColumnName("Salario");

                    b.HasKey("Id");

                    b.ToTable("Curriculos");
                });

            modelBuilder.Entity("Teste1.Models.Vagas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cidade");

                    b.Property<string>("Desc_Vaga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescVaga");

                    b.Property<DateTime>("Dta_Cadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("Dta_Cadastro");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Funcao");

                    b.Property<string>("Nme_Empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nme_Empresa");

                    b.Property<float>("Salario")
                        .HasColumnType("real")
                        .HasColumnName("Salario");

                    b.HasKey("Id");

                    b.ToTable("Vagas");
                });
#pragma warning restore 612, 618
        }
    }
}
